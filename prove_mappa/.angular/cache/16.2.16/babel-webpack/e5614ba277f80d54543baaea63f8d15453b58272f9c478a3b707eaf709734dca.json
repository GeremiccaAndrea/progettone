{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrimesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://progettone.onrender.com/gdf';\n    this.apiClassic = 'https://progettone.onrender.com';\n  }\n  // Funzione per ottenere i crimini senza parametri\n  getCrimes() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Errore durante il recupero dei dati GeoJSON:', error);\n      throw error;\n    }));\n  }\n  // Metodo per fare la richiesta GET per un quartiere specifico\n  getCriminiByNeigh(NomeNeigh) {\n    return this.http.get(`${this.apiClassic}/criminiOnClick/${NomeNeigh}`);\n  }\n  search(query) {\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`;\n    return this.http.get(url).pipe(map(results => results && results.length > 0 ? results[0] : null));\n  }\n  getMilano() {\n    return this.http.get(`${this.apiUrl}/gdfMilano/${NomeNeigh}`).pipe(catchError(error => {\n      console.error('Errore durante il recupero dei dati GeoJSON:', error);\n      throw error;\n    }));\n  }\n  static {\n    this.ɵfac = function CrimesService_Factory(t) {\n      return new (t || CrimesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CrimesService,\n      factory: CrimesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["catchError","map","CrimesService","constructor","http","apiUrl","apiClassic","getCrimes","get","pipe","error","console","getCriminiByNeigh","NomeNeigh","search","query","url","encodeURIComponent","results","length","getMilano","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/progettone/prove_mappa/src/app/crimes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\n\n// Definisci il tipo di dato per i crimini\nexport interface Crime {\n  id: number;\n  type: string;\n  date: string;\n  location: string;\n  // Aggiungi altri campi pertinenti qui\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrimesService {\n  private apiUrl = 'https://progettone.onrender.com/gdf';\n  private apiClassic = 'https://progettone.onrender.com'\n  constructor(private http: HttpClient) { }\n\n  // Funzione per ottenere i crimini senza parametri\n  getCrimes(): Observable<any> {\n    return this.http.get<any>(this.apiUrl).pipe(\n      catchError(error => {\n        console.error('Errore durante il recupero dei dati GeoJSON:', error);\n        throw error;\n      })\n    );\n  }\n   // Metodo per fare la richiesta GET per un quartiere specifico\n   getCriminiByNeigh(NomeNeigh: string): Observable<any> {\n    return this.http.get<any>(`${this.apiClassic}/criminiOnClick/${NomeNeigh}`);\n  }\n  search(query: string): Observable<NominatimResult | null> {\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`;\n    return this.http.get<NominatimResult[]>(url).pipe(\n      map(results => (results && results.length > 0 ? results[0] : null))\n    );\n  }\n\n  getMilano(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/gdfMilano/${NomeNeigh}`).pipe(\n      catchError(error => {\n        console.error('Errore durante il recupero dei dati GeoJSON:', error);\n        throw error;\n      })\n    );\n  }\n  \n}\nexport interface NominatimResult {\n  lat: string; // Latitude in string format\n  lon: string; // Longitude in string format\n  display_name: string; // Full name of the location\n}\n\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,GAAG,QAAQ,gBAAgB;;;AAcpC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC;IAC9C,KAAAC,UAAU,GAAG,iCAAiC;EACd;EAExC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,IAAI,CAACH,MAAM,CAAC,CAACI,IAAI,CACzCT,UAAU,CAACU,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EACC;EACAE,iBAAiBA,CAACC,SAAiB;IAClC,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACF,UAAU,mBAAmBO,SAAS,EAAE,CAAC;EAC7E;EACAC,MAAMA,CAACC,KAAa;IAClB,MAAMC,GAAG,GAAG,4DAA4DC,kBAAkB,CAACF,KAAK,CAAC,EAAE;IACnG,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAoBQ,GAAG,CAAC,CAACP,IAAI,CAC/CR,GAAG,CAACiB,OAAO,IAAKA,OAAO,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,GAAGD,OAAO,CAAC,CAAC,CAAC,GAAG,IAAK,CAAC,CACpE;EACH;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,cAAcQ,SAAS,EAAE,CAAC,CAACJ,IAAI,CACrET,UAAU,CAACU,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;;;uBAhCWR,aAAa,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbtB,aAAa;MAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}